<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config />
	<context:property-placeholder
		location="WEB-INF/jdbc.properties" />
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${jdbc.driverClassName" /> <property 
		name="url" value="${jdbc.url" /> <property name="username" value="${jdbc.username" 
		/> <property name="password" value="${jdbc.password" /> </bean> -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<bean id="childrenDAO"
		class="im430.xmas.dao.ChildrenDAOImpl">
	</bean>
		<bean id="addressDAO"
		class="im430.xmas.dao.AddressDAOImpl">
	</bean>

	<!-- Transaction Manager: Spring provided implementation -->
	<!-- based on API used for DAO -->
	<!-- in this case JDBC-based DAO implementation -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- transaction advice configuration -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- all methods starting with "get" shall use read-only transactions: -->
			<tx:method name="get*" read-only="true" />
			<!-- all other methods shall use default transaction configuration: -->
			<tx:method name="*" />
			<!-- available attributes: propagation, isolation, timeout, read-only, 
				rollback-for, no-rollback-for -->
		</tx:attributes>
	</tx:advice>
	<!-- mapping TX advice to pointcut -->
	<tx:annotation-driven />
	
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="/WEB-INF/mybatis-config.xml"/>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
</beans>

